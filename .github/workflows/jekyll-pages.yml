# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  workflow_run:
    workflows: ["Receive_PR"]
    types:
      - completed
  workflow_dispatch:
    
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  CommentPr:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps: 
        - name: get PR number
          uses: actions/github-script@v6
          with:
            script: |
              var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 run_id: ${{github.event.workflow_run.id }},
              });
              var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                return artifact.name == "pr_number"
              })[0];
              var download = await github.rest.actions.downloadArtifact({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 artifact_id: matchArtifact.id,
                 archive_format: 'zip',
              });
              var fs = require('fs');
              fs.writeFileSync('${{github.workspace}}/pr_number.zip', Buffer.from(download.data));
              return matchArtifact.id
        - name: get Pr number
            run:unzip pr_number.zip
        - name: Post address
          uses: actions/github-script@v6
          if: ${{ success()}}
          with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
           script: |
            const pr_number = $(cat pr_number.txt);
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: "The web-site is built. It will be available, after a few minutes, here: https://cgal.github.io/cgal-web/index.html"
            });
        - name: Post error
          uses: actions/github-script@v6
          if: ${{ failure()}}
          with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
           script: |
            const pr_number = $(cat pr_number.txt);
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: "There was an error while building the web-site"
            });
